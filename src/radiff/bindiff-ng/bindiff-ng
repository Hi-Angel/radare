#!/usr/bin/perl

# bindiff
# TODO: Diff data sections

# Get offset and size of the $bin executable sections and dump the disassembly to
# a temporary file called $dis
sub disasm {
	my ($bin, $dis, $dis_off) = @_;
	$radare_cmd = "echo \'";
	foreach (split /[\n\r]+/, `rabin -S $bin`) {
		if (/.*offset=(\w*).*size=(\w*).*privileges=..x.*/) {
			$radare_cmd.="pD $2 @ $1 &&";
		}
	}
	$radare_cmd .= "\' | radare -nv -e \'asm.offset = ";
	$radare_cmd_true = $radare_cmd."false\' $bin > $dis";
	$radare_cmd_false = $radare_cmd."true\' $bin > $dis_off";
	system $radare_cmd_true;
	system $radare_cmd_false;
}

# Print a range of lines from a file
sub print_lines {
	my ($file, $from, $to, $context, $prefix) = @_;
	my $i = 1;

	open FILE, "<$file";
	while (my $ret = <FILE>) {	
		if (($i >= $from-$context && $i < $from) || ($i > $to && $i <= $to + $context)) {
			print "  $ret";
		} elsif ($i >= $from && $i <= $to) {
			print "$prefix $ret";
		} elsif ($i > $to) {
			last;
		}
		$i++;
	}
	close FILE;
}

# Remove temporary files
sub rm_tmp {
	unlink $a_dis;
	unlink $b_dis;
	unlink $a_dis_off;
	unlink $b_dis_off;
	unlink $diff;
}

# Signal handling
$SIG{INT} = \&rm_tmp;


# Get args
die "Usage: $0 <file a> <file b> [context]\n" if ($#ARGV > 2);
$a_bin = $ARGV[0];
$b_bin = $ARGV[1];
$context = $ARGV[2];
$context = 2 if ($context == "");

# File A
$a_dis="/tmp/.a.$$.".int rand(0xC0D3);
$a_dis_off=$a_dis.".off";
&disasm($a_bin, $a_dis, $a_dis_off);
# File B
$b_dis="/tmp/.b.$$.".int rand(0xCAFE);
$b_dis_off=$b_dis.".off";
&disasm($b_bin, $b_dis, $b_dis_off);

# Diff dumps and remove temporary files
$diff="/tmp/.diff.$$.".int rand(0xBABE);
system "diff -Hb $a_dis $b_dis | grep -E \'^(\\w|,)*\$\' > $diff";

open DIFF, "<$diff";
while (my $line = <DIFF>) {
	my $a_lines = 0;
	my $b_lines = 0;
	my $from = 0;
	my $to = 0;
	my $ret = "";

	if ($line =~ /^(.*)c(.*)$/) {
		$a_lines = $1;
		$b_lines = $2;

		if ($a_lines =~ /(\d+),(\d+)/) {
			$from = $1;
			$to = $2;
		} else {
			$from = $a_lines;
			$to = $a_lines;
		}
		&print_lines($a_dis_off, $from, $to, $context, "-");

		print "----\n";

		if ($b_lines =~ /(\d+),(\d+)/) {
			$from = $1;
			$to = $2;
		} else {
			$from = $b_lines;
			$to = $b_lines;
		}
		&print_lines($b_dis_off, $from, $to, $context, "+");

	} elsif ($line =~ /(.*)a(.*)/) {
		$b_lines = $2;

		if ($b_lines =~ /(\d+),(\d+)/) {
			$from = $1;
			$to = $2;
		} else {
			$from = $b_lines;
			$to = $b_lines;
		}
		&print_lines($b_dis_off, $from, $to, $context, "+");

	} elsif ($line =~ /(.*)d(.*)/) {
		$a_lines = $1;

		if ($a_lines =~ /(\d+),(\d+)/) {
			$from = $1;
			$to = $2;
		} else {
			$from = $a_lines;
			$to = $a_lines;
		}
		&print_lines($a_dis_off, $from, $to, $context, "-");
	}

	print "------------\n";
}
close DIFF;

&rm_tmp;
